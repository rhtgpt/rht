CREATE TABLE GD.CIM_OFM_SMG3_LOGGING_NEW (
    TRACE_ID              VARCHAR2(36 BYTE),
    ALIAS                 VARCHAR2(16 BYTE),
    AUDIT_CREATE_DATE     TIMESTAMP(6) DEFAULT SYSTIMESTAMP,
    TRACE_HASH            GENERATED ALWAYS AS (MOD(ORA_HASH(TRACE_ID), 3)) VIRTUAL,
    SMG3_LOGGING_DATA     CLOB,
    FILTRATION_JSON_DATA  CLOB
)
PARTITION BY RANGE (AUDIT_CREATE_DATE)
SUBPARTITION BY LIST (TRACE_HASH)
(
    PARTITION p0 VALUES LESS THAN (TIMESTAMP '2025-06-17 00:00:00')
    (
        SUBPARTITION sp0_p0 VALUES (0)
            LOB (SMG3_LOGGING_DATA) STORE AS (TABLESPACE GD_LOB_05),
            LOB (FILTRATION_JSON_DATA) STORE AS (TABLESPACE GD_LOB_05),

        SUBPARTITION sp1_p0 VALUES (1)
            LOB (SMG3_LOGGING_DATA) STORE AS (TABLESPACE GD_LOB_06),
            LOB (FILTRATION_JSON_DATA) STORE AS (TABLESPACE GD_LOB_06),

        SUBPARTITION sp2_p0 VALUES (2)
            LOB (SMG3_LOGGING_DATA) STORE AS (TABLESPACE GD_LOB_07),
            LOB (FILTRATION_JSON_DATA) STORE AS (TABLESPACE GD_LOB_07)
    )
)
COMPRESS FOR OLTP;



CREATE TABLE PRODUCT (
    PRODUCT_ID       NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    PRODUCT_NAME     VARCHAR2(100) NOT NULL,
    DESCRIPTION      VARCHAR2(500),
    CATEGORY         VARCHAR2(50),
    PRICE            NUMBER(10, 2) NOT NULL,
    STOCK_QUANTITY   NUMBER DEFAULT 0,
    CREATED_AT       TIMESTAMP DEFAULT SYSTIMESTAMP,
    UPDATED_AT       TIMESTAMP
);

INSERT INTO GD.CIM_OPM_SMG3_LOGGING_NEW (
    TRACE_ID,
    ALIAS,
    AUDIT_CREATE_DATE,
    SMG3_LOGGING_DATA,
    FILTRATION_JSON_DATA
) VALUES (
    '123e4567-e89b-12d3-a456-426614174000',
    'SYSLOG',
    TO_TIMESTAMP('2025-06-17 10:15:00', 'YYYY-MM-DD HH24:MI:SS'),
    RPAD('{"log":"Sample logging data"}', 50000, '*'),  -- ~50KB CLOB
    RPAD('{"filter":"This is a filtration data example."}', 60000, '#') -- ~60KB CLOB
);


