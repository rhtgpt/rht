-- =========================================================
-- Build GD.CIM_NC_DART_LOGGING_NEW, load data, and swap
-- =========================================================
SET SERVEROUTPUT ON SIZE UNLIMITED
SET ECHO ON
SET FEEDBACK ON
SET DEFINE OFF
SET LINESIZE 500

PROMPT ===============================================
PROMPT Script START:
BEGIN
  DBMS_OUTPUT.PUT_LINE(TO_CHAR(SYSTIMESTAMP,'YYYY-MM-DD HH24:MI:SS.FF3 TZH:TZM'));
END;
/
PROMPT ===============================================

-- Session parallel (your default preference)
ALTER SESSION FORCE PARALLEL DDL PARALLEL 32;
ALTER SESSION FORCE PARALLEL QUERY PARALLEL 32;
ALTER SESSION FORCE PARALLEL DML PARALLEL 32;

-- =========================================================
-- 1) CREATE TABLE (final DDL you approved)
-- =========================================================
CREATE TABLE GD.CIM_NC_DART_LOGGING_NEW
(
  TRACE_ID           VARCHAR2(36 BYTE),
  AUDIT_CREATE_DATE  TIMESTAMP(6) DEFAULT SYSTIMESTAMP,
  NC_REQUEST_DATA    CLOB,
  NC_RESPONSE_DATA   CLOB
)
TABLESPACE OMIE_DATA_01
PARTITION BY RANGE (AUDIT_CREATE_DATE)
  INTERVAL (NUMTODSINTERVAL(1,'DAY'))
SUBPARTITION BY HASH (TRACE_ID)
SUBPARTITION TEMPLATE
(
  SUBPARTITION sp0
    LOB (NC_REQUEST_DATA)  STORE AS nc_req_lob_sp0  (TABLESPACE GD_LOB_01),
    LOB (NC_RESPONSE_DATA) STORE AS nc_resp_lob_sp0 (TABLESPACE GD_LOB_02),

  SUBPARTITION sp1
    LOB (NC_REQUEST_DATA)  STORE AS nc_req_lob_sp1  (TABLESPACE GD_LOB_02),
    LOB (NC_RESPONSE_DATA) STORE AS nc_resp_lob_sp1 (TABLESPACE GD_LOB_01)
)
(
  PARTITION p_seed VALUES LESS THAN (TIMESTAMP '2020-09-15 00:00:00')
)
ENABLE ROW MOVEMENT
LOGGING;

-- =========================================================
-- 2) PK index + constraint (use _NEW suffix) + grants
-- =========================================================
CREATE UNIQUE INDEX GD.CIM_NC_DART_LOGGING_PK_NEW
  ON GD.CIM_NC_DART_LOGGING_NEW (TRACE_ID, AUDIT_CREATE_DATE)
  TABLESPACE OMIE_IDX LOCAL;

ALTER TABLE GD.CIM_NC_DART_LOGGING_NEW
  ADD CONSTRAINT CIM_NC_DART_LOGGING_PK_NEW
  PRIMARY KEY (TRACE_ID, AUDIT_CREATE_DATE)
  USING INDEX GD.CIM_NC_DART_LOGGING_PK_NEW
  ENABLE;

-- Grants (from images)
GRANT DELETE ON GD.CIM_NC_DART_LOGGING_NEW TO GD_APP_ROLE;
GRANT INSERT ON GD.CIM_NC_DART_LOGGING_NEW TO GD_APP_ROLE;
GRANT SELECT ON GD.CIM_NC_DART_LOGGING_NEW TO GD_APP_ROLE;
GRANT UPDATE ON GD.CIM_NC_DART_LOGGING_NEW TO GD_APP_ROLE;
GRANT SELECT ON GD.CIM_NC_DART_LOGGING_NEW TO GD_VIEW_ROLE;

-- =========================================================
-- 3) Parallel bulk copy from existing table
-- =========================================================
ALTER SESSION ENABLE PARALLEL DML;

INSERT /*+ APPEND PARALLEL(GD.CIM_NC_DART_LOGGING_NEW,32) */
INTO GD.CIM_NC_DART_LOGGING_NEW
(TRACE_ID, AUDIT_CREATE_DATE, NC_REQUEST_DATA, NC_RESPONSE_DATA)
SELECT /*+ PARALLEL(s,32) */
       s.TRACE_ID, s.AUDIT_CREATE_DATE, s.NC_REQUEST_DATA, s.NC_RESPONSE_DATA
FROM   GD.CIM_NC_DART_LOGGING s;

COMMIT;

-- =========================================================
-- 4) Simple swap: OLD -> _OLD, NEW -> live
-- =========================================================
ALTER TABLE GD.CIM_NC_DART_LOGGING     RENAME TO CIM_NC_DART_LOGGING_OLD;
ALTER TABLE GD.CIM_NC_DART_LOGGING_NEW RENAME TO CIM_NC_DART_LOGGING;

-- Reset session parallel flags
ALTER SESSION DISABLE PARALLEL DDL;
ALTER SESSION DISABLE PARALLEL QUERY;
ALTER SESSION DISABLE PARALLEL DML;

PROMPT ===============================================
PROMPT Script FINISH:
BEGIN
  DBMS_OUTPUT.PUT_LINE(TO_CHAR(SYSTIMESTAMP,'YYYY-MM-DD HH24:MI:SS.FF3 TZH:TZM'));
END;
/
PROMPT ===============================================
