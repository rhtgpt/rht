-- 50 MB filler for CLOB
-- (Oracle may not accept inline literal > 32 KB, so RPAD must be used)
-- Each insert will generate a 50MB LOB
-- Adjust ALIAS between 'ASIA' / 'EU' for variety

INSERT INTO GD.CIM_OFM_SMG6_LOGGING
(TRACE_ID, ALIAS, AUDIT_CREATE_DATE, SMG3_LOGGING_DATA, FILTRATION_JSON_DATA)
VALUES (SYS_GUID(), 'ASIA', SYSTIMESTAMP,
        RPAD('X', 52428800, 'X'),
        RPAD('Y', 52428800, 'Y'));

INSERT INTO GD.CIM_OFM_SMG6_LOGGING
(TRACE_ID, ALIAS, AUDIT_CREATE_DATE, SMG3_LOGGING_DATA, FILTRATION_JSON_DATA)
VALUES (SYS_GUID(), 'EU', SYSTIMESTAMP,
        RPAD('A', 52428800, 'A'),
        RPAD('B', 52428800, 'B'));

INSERT INTO GD.CIM_OFM_SMG6_LOGGING
(TRACE_ID, ALIAS, AUDIT_CREATE_DATE, SMG3_LOGGING_DATA, FILTRATION_JSON_DATA)
VALUES (SYS_GUID(), 'ASIA', SYSTIMESTAMP,
        RPAD('C', 52428800, 'C'),
        RPAD('D', 52428800, 'D'));

INSERT INTO GD.CIM_OFM_SMG6_LOGGING
(TRACE_ID, ALIAS, AUDIT_CREATE_DATE, SMG3_LOGGING_DATA, FILTRATION_JSON_DATA)
VALUES (SYS_GUID(), 'EU', SYSTIMESTAMP,
        RPAD('E', 52428800, 'E'),
        RPAD('F', 52428800, 'F'));

INSERT INTO GD.CIM_OFM_SMG6_LOGGING
(TRACE_ID, ALIAS, AUDIT_CREATE_DATE, SMG3_LOGGING_DATA, FILTRATION_JSON_DATA)
VALUES (SYS_GUID(), 'ASIA', SYSTIMESTAMP,
        RPAD('G', 52428800, 'G'),
        RPAD('H', 52428800, 'H'));

INSERT INTO GD.CIM_OFM_SMG6_LOGGING
(TRACE_ID, ALIAS, AUDIT_CREATE_DATE, SMG3_LOGGING_DATA, FILTRATION_JSON_DATA)
VALUES (SYS_GUID(), 'EU', SYSTIMESTAMP,
        RPAD('I', 52428800, 'I'),
        RPAD('J', 52428800, 'J'));

INSERT INTO GD.CIM_OFM_SMG6_LOGGING
(TRACE_ID, ALIAS, AUDIT_CREATE_DATE, SMG3_LOGGING_DATA, FILTRATION_JSON_DATA)
VALUES (SYS_GUID(), 'ASIA', SYSTIMESTAMP,
        RPAD('K', 52428800, 'K'),
        RPAD('L', 52428800, 'L'));

INSERT INTO GD.CIM_OFM_SMG6_LOGGING
(TRACE_ID, ALIAS, AUDIT_CREATE_DATE, SMG3_LOGGING_DATA, FILTRATION_JSON_DATA)
VALUES (SYS_GUID(), 'EU', SYSTIMESTAMP,
        RPAD('M', 52428800, 'M'),
        RPAD('N', 52428800, 'N'));

INSERT INTO GD.CIM_OFM_SMG6_LOGGING
(TRACE_ID, ALIAS, AUDIT_CREATE_DATE, SMG3_LOGGING_DATA, FILTRATION_JSON_DATA)
VALUES (SYS_GUID(), 'ASIA', SYSTIMESTAMP,
        RPAD('O', 52428800, 'O'),
        RPAD('P', 52428800, 'P'));

INSERT INTO GD.CIM_OFM_SMG6_LOGGING
(TRACE_ID, ALIAS, AUDIT_CREATE_DATE, SMG3_LOGGING_DATA, FILTRATION_JSON_DATA)
VALUES (SYS_GUID(), 'EU', SYSTIMESTAMP,
        RPAD('Q', 52428800, 'Q'),
        RPAD('R', 52428800, 'R'));

-- repeat pattern for 10 more rows
INSERT INTO GD.CIM_OFM_SMG6_LOGGING VALUES (SYS_GUID(), 'ASIA', SYSTIMESTAMP, RPAD('S', 52428800, 'S'), RPAD('T', 52428800, 'T'));
INSERT INTO GD.CIM_OFM_SMG6_LOGGING VALUES (SYS_GUID(), 'EU',   SYSTIMESTAMP, RPAD('U', 52428800, 'U'), RPAD('V', 52428800, 'V'));
INSERT INTO GD.CIM_OFM_SMG6_LOGGING VALUES (SYS_GUID(), 'ASIA', SYSTIMESTAMP, RPAD('W', 52428800, 'W'), RPAD('X', 52428800, 'X'));
INSERT INTO GD.CIM_OFM_SMG6_LOGGING VALUES (SYS_GUID(), 'EU',   SYSTIMESTAMP, RPAD('Y', 52428800, 'Y'), RPAD('Z', 52428800, 'Z'));
INSERT INTO GD.CIM_OFM_SMG6_LOGGING VALUES (SYS_GUID(), 'ASIA', SYSTIMESTAMP, RPAD('1', 52428800, '1'), RPAD('2', 52428800, '2'));
INSERT INTO GD.CIM_OFM_SMG6_LOGGING VALUES (SYS_GUID(), 'EU',   SYSTIMESTAMP, RPAD('3', 52428800, '3'), RPAD('4', 52428800, '4'));
INSERT INTO GD.CIM_OFM_SMG6_LOGGING VALUES (SYS_GUID(), 'ASIA', SYSTIMESTAMP, RPAD('5', 52428800, '5'), RPAD('6', 52428800, '6'));
INSERT INTO GD.CIM_OFM_SMG6_LOGGING VALUES (SYS_GUID(), 'EU',   SYSTIMESTAMP, RPAD('7', 52428800, '7'), RPAD('8', 52428800, '8'));
INSERT INTO GD.CIM_OFM_SMG6_LOGGING VALUES (SYS_GUID(), 'ASIA', SYSTIMESTAMP, RPAD('9', 52428800, '9'), RPAD('0', 52428800, '0'));
INSERT INTO GD.CIM_OFM_SMG6_LOGGING VALUES (SYS_GUID(), 'EU',   SYSTIMESTAMP, RPAD('AA',52428800,'A'),  RPAD('BB',52428800,'B'));

COMMIT;
